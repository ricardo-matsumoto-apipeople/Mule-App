<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:json-logger="http://www.mulesoft.org/schema/mule/json-logger"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:anypoint-mq="http://www.mulesoft.org/schema/mule/anypoint-mq" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/anypoint-mq http://www.mulesoft.org/schema/mule/anypoint-mq/current/mule-anypoint-mq.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/json-logger http://www.mulesoft.org/schema/mule/json-logger/current/mule-json-logger.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd">
	<flow name="mainMQFlow" doc:id="6fe4d073-a948-4e0c-9b47-f8ddcd7bbd70" >
		<http:listener doc:name="Listener" doc:id="423b10fb-008b-417c-964a-bd51c1f3382a" config-ref="HTTP_Listener_config" path="/mq"/>
		<set-variable value="#[attributes.queryParams.retry default null]" doc:name="Set Variable" doc:id="72b7701b-d243-44dd-b8e6-abd971ec1620" variableName="retry"/>
		<file:read doc:name="Read" doc:id="d5e87c58-5a25-4dfa-837c-3f909e6a08c4" config-ref="File_Config" path="C:\Users\ricam\Desktop\Mulesoft-wsn-ew\commonmodulelab\src\main\resources\mock\color.json" />
		<anypoint-mq:publish doc:name="Publish" doc:id="6a2eb5ee-909a-4a72-af1f-e872e2af4f87" config-ref="Anypoint_MQ_Config" destination="${amq.name.lab-queue}">
			<anypoint-mq:body ><![CDATA[#[%dw 2.0
output application/json
---
{
	"date": now(),
	"payload": payload,
	"retry": vars.retry
}]]]></anypoint-mq:body>
		</anypoint-mq:publish>
	</flow>
	<flow name="commomLabMQFlow" doc:id="59977789-dfe0-4f9e-9373-7a12cd27632f" >
		<anypoint-mq:subscriber doc:name="Subscriber" doc:id="ada45649-164a-411e-8f37-04f32ceba2b5" config-ref="Anypoint_MQ_Config" destination="${amq.name.lab-queue}" acknowledgementMode="MANUAL">
			<anypoint-mq:subscriber-type >
				<anypoint-mq:prefetch maxLocalMessages="1" />
			</anypoint-mq:subscriber-type>
			<anypoint-mq:circuit-breaker tripTimeout="${amq.circuit-break.timeout}" onErrorTypes="${amq.circuit-break.errors}" errorsThreshold="${amq.circuit-break.number-errors}" tripTimeoutUnit="SECONDS"/>
		</anypoint-mq:subscriber>
		<set-variable value="#[attributes.ackToken]" doc:name="SET ackToken" doc:id="360f8807-4f81-44db-9911-e0012165d556" variableName="ackToken" />
		<set-variable value="#[payload.retry]" doc:name="Set Variable" doc:id="60a2a783-667b-46b8-8a8c-a8d0e29c5974" variableName="retry"/>
		<flow-ref doc:name="Refer to cf-mq-headers-flow" doc:id="2db67518-bc4a-4162-a6df-bd1a5d556139" name="cf-mq-headers-flow" />
		<ee:transform doc:name="DW: SET property values" doc:id="4aa61212-adce-454f-be88-70e83f8f28c2" >
			<ee:message />
			<ee:variables >
				<ee:set-variable variableName="redeliveryCount" ><![CDATA[%dw 2.0
output application/java
---
(vars.redeliveryCount as Number) + 1]]></ee:set-variable>
				<ee:set-variable variableName="originalPayload" ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-variable>
				<ee:set-variable variableName="sourceQueue" ><![CDATA[%dw 2.0
output application/java
---
p('amq.name.lab-queue')]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<json-logger:logger doc:name="Log: Start" doc:id="956ce557-7c36-4db6-b31b-f8c681115951" config-ref="JSON_Logger_Config" message="Start" category="${api.name}.pf-work-orders-downstream" correlationId="#[vars.transactionId]" >
			<json-logger:content ><![CDATA[#[output application/json skipNullOn="everywhere" ---
{
    transactionId: vars.transactionId,
    sourceSystem: vars.sourceSystem,
    objectType: vars.objectType,
    objectId: vars.objectId,
    redeliveryCount: vars.redeliveryCount
}]]]></json-logger:content>
		</json-logger:logger>
		<json-logger:logger doc:name="Log: Transform to CDM" doc:id="955c1150-8874-453d-a182-3b0ee537a15c" config-ref="JSON_Logger_Config" message="CDM transform" tracePoint="BEFORE_TRANSFORM" priority="DEBUG" category="${api.name}.pf-work-orders-downstream" correlationId="#[vars.transactionId]" >
			<json-logger:content ><![CDATA[#[import modules::JSONLoggerModule output application/json ---
{
    payload: JSONLoggerModule::stringifyNonJSON(payload)
}]]]></json-logger:content>
		</json-logger:logger>
		<choice doc:name="Choice" doc:id="bd05fbd6-3711-4924-a58e-e7c8d0abaf44" >
			<when expression='#[vars.retry == "true"]'>
				<raise-error doc:name="Raise error" doc:id="90db5e0c-2a0d-4c9e-952f-93556405bd3d" type="HTTP: CONNECTIVITY" description="Mock Error" />
			</when>
			<when expression='#[vars.retry == "false"]'>
				<raise-error doc:name="Raise error" doc:id="fde3d0b2-6607-4965-8517-186c5a00bf26" type="CB:TEST" description="Issue without retry"/>

			
			</when>
		</choice>
		<anypoint-mq:ack doc:name="Ack" doc:id="c8ef6909-e184-45dc-9216-8b0b82a36541" config-ref="Anypoint_MQ_Config" ackToken="#[vars.ackToken]"/>
		<error-handler ref="common-mq-sub-error-handler" />
	</flow>
</mule>
